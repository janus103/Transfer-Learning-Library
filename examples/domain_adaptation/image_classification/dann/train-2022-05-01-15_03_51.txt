Namespace(arch='resnet50', batch_size=16, bottleneck_dim=256, data='ImageNet50', epochs=300, iters_per_epoch=1000, log='dann', lr=0.01, lr_decay=0.75, lr_gamma=0.001, momentum=0.9, no_hflip=False, no_pool=False, norm_mean=(0.485, 0.456, 0.406), norm_std=(0.229, 0.224, 0.225), per_class_eval=False, phase='train', print_freq=100, resize_size=224, root='/data/ImageNet_dataset/v100/jin/', scratch=False, seed=None, source=['IN'], target=['gray'], trade_off=1.0, train_resizing='custom.target', val_resizing='custom.target', weight_decay=0.001, workers=2)
train_transform:  Compose(
    Compose(
    ResizeImage(size=(224, 224))
    CenterCrop(size=(224, 224))
)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225))
)
val_transform:  Compose(
    Compose(
    ResizeImage(size=(224, 224))
    CenterCrop(size=(224, 224))
)
    ToTensor()
    Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225))
)
=> using model 'resnet50'
lr: 0.001
tensor([[-0.1143, -0.1657, -0.1828,  ...,  0.1426,  0.0912,  0.1939],
        [-0.3712, -0.3883, -0.2684,  ...,  0.0741,  0.1083,  0.1426],
        [-0.0972, -0.0972, -0.2171,  ...,  0.1254,  0.1254,  0.1083],
        ...,
        [-1.3473, -1.3130, -1.3302,  ..., -0.1314, -0.2342, -0.2342],
        [-1.3644, -1.3815, -1.2274,  ..., -0.1486, -0.2342, -0.2342],
        [-1.5185, -1.4158, -1.3815,  ..., -0.1828, -0.2171, -0.2513]])
tensor([[ 0.0126, -0.0399, -0.0574,  ...,  0.2752,  0.2227,  0.3277],
        [-0.2500, -0.2675, -0.1450,  ...,  0.2052,  0.2402,  0.2752],
        [ 0.0301,  0.0301, -0.0924,  ...,  0.2577,  0.2577,  0.2402],
        ...,
        [-1.2479, -1.2129, -1.2304,  ..., -0.0049, -0.1099, -0.1099],
        [-1.2654, -1.2829, -1.1253,  ..., -0.0224, -0.1099, -0.1099],
        [-1.4230, -1.3179, -1.2829,  ..., -0.0574, -0.0924, -0.1275]])
tensor([[-0.7052, -0.7052, -0.8277,  ..., -0.9503, -0.6877, -1.0028],
        [ 0.3627, -0.3375, -0.4601,  ..., -1.3354, -1.1078, -0.8627],
        [ 0.1702, -0.4426, -0.6176,  ..., -1.2654, -1.1429, -1.2304],
        ...,
        [-0.2850, -0.3550, -0.7227,  ..., -0.8803, -0.7052, -0.7752],
        [-0.7577, -0.7577, -0.6176,  ..., -0.7752, -1.0728, -0.9853],
        [-0.9503, -0.9153, -0.8102,  ..., -0.5826, -0.9328, -0.8978]])
Epoch: [0][   0/1000]	Time  1.41 ( 1.41)	Data  0.01 ( 0.01)	Loss   4.80 (  4.80)	Cls Acc 6.2 (6.2)	Domain Acc 37.5 (37.5)
tensor([[-0.0116,  0.1426, -0.1999,  ..., -1.1075, -1.1589, -1.2274],
        [-0.1999, -0.1999, -0.2856,  ..., -0.7479, -0.7822, -0.8507],
        [-0.0116, -0.5424, -0.4911,  ..., -0.1999, -0.2513, -0.3027],
        ...,
        [ 0.3481, -0.6965, -0.9705,  ..., -1.3644, -1.3987, -1.3987],
        [ 0.5193,  0.3823, -0.5767,  ..., -1.3302, -1.3130, -1.3473],
        [ 0.2282,  0.6734,  0.4337,  ..., -1.2959, -1.2617, -1.2959]])
tensor([[ 0.1176,  0.2752, -0.0749,  ..., -1.0028, -1.0553, -1.1253],
        [-0.0749, -0.0749, -0.1625,  ..., -0.6352, -0.6702, -0.7402],
        [ 0.1176, -0.4251, -0.3725,  ..., -0.0749, -0.1275, -0.1800],
        ...,
        [ 0.4853, -0.5826, -0.8627,  ..., -1.2654, -1.3004, -1.3004],
        [ 0.6604,  0.5203, -0.4601,  ..., -1.2304, -1.2129, -1.2479],
        [ 0.3627,  0.8179,  0.5728,  ..., -1.1954, -1.1604, -1.1954]])
tensor([[ 0.3102,  0.2227,  0.5553,  ..., -0.6527, -0.9503, -0.8277],
        [ 1.1506,  1.2906,  1.4307,  ..., -0.7402, -0.8627, -0.9853],
        [ 1.1856,  1.1331,  0.8354,  ..., -0.8452, -0.9678, -1.0028],
        ...,
        [-0.3901, -0.1450, -0.1975,  ..., -0.6352, -0.1975,  0.2402],
        [-0.2675, -0.4776, -0.5476,  ...,  0.0651, -0.1099,  0.4328],
        [-0.0574, -0.0049,  0.0301,  ...,  0.2927, -0.0399,  0.0826]])
tensor([[ 0.5536,  0.5878,  0.6221,  ..., -1.8439, -1.8953, -1.9467],
        [ 0.6734,  0.7077,  0.7248,  ..., -1.9124, -1.9295, -1.9295],
        [ 0.8104,  0.8447,  0.8789,  ..., -1.9467, -1.9809, -1.9980],
        ...,
        [ 0.5193,  0.5364,  0.5878,  ...,  0.2453,  0.1254,  0.1083],
        [ 0.5022,  0.5364,  0.6221,  ...,  0.2282,  0.1083,  0.1083],
        [ 0.5536,  0.5536,  0.5536,  ...,  0.2453,  0.1768,  0.2111]])
tensor([[ 0.6954,  0.7304,  0.7654,  ..., -1.7556, -1.8081, -1.8606],
        [ 0.8179,  0.8529,  0.8704,  ..., -1.8256, -1.8431, -1.8431],
        [ 0.9580,  0.9930,  1.0280,  ..., -1.8606, -1.8957, -1.9132],
        ...,
        [ 0.6604,  0.6779,  0.7304,  ...,  0.3803,  0.2577,  0.2402],
        [ 0.6429,  0.6779,  0.7654,  ...,  0.3627,  0.2402,  0.2402],
        [ 0.6954,  0.6954,  0.6954,  ...,  0.3803,  0.3102,  0.3452]])
tensor([[-1.6331, -1.6506, -1.6681,  ..., -0.3725, -0.1800,  0.0826],
        [-1.6856, -1.6856, -1.6681,  ..., -0.2325, -0.6352, -0.2150],
        [-1.6856, -1.7031, -1.6506,  ...,  0.2402,  0.1176, -0.1275],
        ...,
        [-1.1954, -1.1779, -1.1253,  ..., -1.8957, -1.8782, -1.8782],
        [-1.1604, -1.0903, -1.0903,  ..., -1.8957, -1.8782, -1.8782],
        [-1.0903, -1.1253, -1.1253,  ..., -1.9132, -1.9132, -1.8957]])
tensor([[-0.9020, -0.7993, -0.7822,  ..., -0.5082, -0.4397, -0.4568],
        [-0.8507, -0.7993, -0.8164,  ..., -0.5938, -0.5596, -0.5253],
        [-0.8849, -0.8849, -0.9020,  ..., -0.3883, -0.3369, -0.4226],
        ...,
        [-0.7479, -0.9363, -1.0048,  ..., -0.4054, -0.4739, -0.5767],
        [-0.9192, -1.0390, -1.0219,  ..., -0.4911, -0.5424, -0.5424],
        [-0.9877, -1.0562, -1.0219,  ..., -0.5253, -0.6794, -0.6794]])
tensor([[-0.7927, -0.6877, -0.6702,  ..., -0.3901, -0.3200, -0.3375],
        [-0.7402, -0.6877, -0.7052,  ..., -0.4776, -0.4426, -0.4076],
        [-0.7752, -0.7752, -0.7927,  ..., -0.2675, -0.2150, -0.3025],
        ...,
        [-0.6352, -0.8277, -0.8978,  ..., -0.2850, -0.3550, -0.4601],
        [-0.8102, -0.9328, -0.9153,  ..., -0.3725, -0.4251, -0.4251],
        [-0.8803, -0.9503, -0.9153,  ..., -0.4076, -0.5651, -0.5651]])
tensor([[ 0.6429,  0.9055,  0.3627,  ..., -0.4426, -1.5105, -1.5805],
        [ 0.1176,  0.7479,  0.7479,  ..., -1.7206, -1.7206, -1.6506],
        [-0.8978,  0.8529,  1.2381,  ..., -1.6506, -1.7031, -1.7206],
        ...,
        [ 1.3606,  1.2731,  1.2906,  ..., -1.7731, -1.8081, -1.7206],
        [ 1.2206,  1.2556,  1.3081,  ..., -1.8081, -1.7556, -1.7206],
        [ 1.0105,  1.1506,  1.2031,  ..., -1.8081, -1.7556, -1.7031]])
tensor([[-1.1247, -1.1247, -1.1075,  ..., -1.7925, -1.8097, -1.8610],
        [-1.1247, -1.1418, -1.1075,  ..., -1.7925, -1.7925, -1.7754],
        [-1.1247, -1.1247, -1.1075,  ..., -1.7925, -1.7754, -1.7069],
        ...,
        [-1.2274, -1.2617, -1.2103,  ..., -1.0904, -1.1760, -1.1760],
        [-1.2617, -1.2959, -1.2617,  ..., -1.1589, -1.1418, -1.0562],
        [-1.2103, -1.2274, -1.2274,  ..., -0.9534, -1.0219, -1.0904]])
tensor([[-1.0203, -1.0203, -1.0028,  ..., -1.7031, -1.7206, -1.7731],
        [-1.0203, -1.0378, -1.0028,  ..., -1.7031, -1.7031, -1.6856],
        [-1.0203, -1.0203, -1.0028,  ..., -1.7031, -1.6856, -1.6155],
        ...,
        [-1.1253, -1.1604, -1.1078,  ..., -0.9853, -1.0728, -1.0728],
        [-1.1604, -1.1954, -1.1604,  ..., -1.0553, -1.0378, -0.9503],
        [-1.1078, -1.1253, -1.1253,  ..., -0.8452, -0.9153, -0.9853]])
tensor([[ 0.6078,  0.7304,  0.8004,  ..., -0.3375, -0.3375, -0.3550],
        [ 0.7129,  0.7479,  0.7829,  ..., -0.2325, -0.1975, -0.2500],
        [ 0.7479,  0.7304,  0.8179,  ..., -0.1625, -0.0574, -0.1450],
        ...,
        [-0.0224, -0.0049, -0.0049,  ..., -1.0378, -0.9678, -0.9678],
        [-0.0224, -0.0749, -0.0924,  ..., -0.9328, -0.8803, -0.8452],
        [-0.0049, -0.0924,  0.0301,  ..., -0.7752, -0.7402, -0.9678]])
tensor([[-1.4329, -1.4329, -1.4329,  ..., -0.9877, -0.9877, -0.9877],
        [-1.4329, -1.4329, -1.4329,  ..., -0.9877, -0.9877, -0.9877],
        [-1.4329, -1.4329, -1.4329,  ..., -0.9877, -0.9877, -0.9877],
        ...,
        [-1.9980, -1.9980, -1.9980,  ..., -2.0665, -2.0152, -2.0152],
        [-1.9980, -1.9980, -1.9980,  ..., -2.0494, -2.0494, -2.0494],
        [-1.9980, -1.9980, -1.9980,  ..., -2.0323, -2.0665, -2.0837]])
tensor([[-1.3354, -1.3354, -1.3354,  ..., -0.8803, -0.8803, -0.8803],
        [-1.3354, -1.3354, -1.3354,  ..., -0.8803, -0.8803, -0.8803],
        [-1.3354, -1.3354, -1.3354,  ..., -0.8803, -0.8803, -0.8803],
        ...,
        [-1.9132, -1.9132, -1.9132,  ..., -1.9832, -1.9307, -1.9307],
        [-1.9132, -1.9132, -1.9132,  ..., -1.9657, -1.9657, -1.9657],
        [-1.9132, -1.9132, -1.9132,  ..., -1.9482, -1.9832, -2.0007]])
tensor([[ 0.0126, -0.0574, -0.5301,  ...,  1.6232,  1.2206,  1.1856],
        [ 0.0651,  0.0651, -0.4076,  ...,  1.2556,  0.9930,  0.9230],
        [ 0.0126, -0.0399, -0.4251,  ...,  1.3782,  1.0280,  0.9405],
        ...,
        [-0.4601, -0.5476, -0.4951,  ..., -0.2675, -0.1975, -0.1800],
        [-0.0049, -0.1975, -0.4076,  ..., -0.3200,  0.1877,  1.1331],
        [ 0.5728, -0.2325, -0.3550,  ..., -0.4076,  1.3256,  2.3761]])
tensor([[-1.9295, -1.9467, -1.9295,  ..., -1.9809, -2.0323, -2.0152],
        [-1.9467, -1.9638, -1.8439,  ..., -1.9809, -1.9980, -1.9980],
        [-1.9124, -1.8782, -1.8610,  ..., -1.9809, -1.9809, -1.9809],
        ...,
        [ 0.2624,  0.2796,  0.3309,  ..., -1.1932, -1.2617, -1.2617],
        [ 0.2282,  0.2453,  0.2624,  ..., -1.2617, -1.3130, -1.3473],
        [ 0.2796,  0.2624,  0.2624,  ..., -1.3644, -1.2959, -1.3815]])
tensor([[-1.8431, -1.8606, -1.8431,  ..., -1.8957, -1.9482, -1.9307],
        [-1.8606, -1.8782, -1.7556,  ..., -1.8957, -1.9132, -1.9132],
        [-1.8256, -1.7906, -1.7731,  ..., -1.8957, -1.8957, -1.8957],
        ...,
        [ 0.3978,  0.4153,  0.4678,  ..., -1.0903, -1.1604, -1.1604],
        [ 0.3627,  0.3803,  0.3978,  ..., -1.1604, -1.2129, -1.2479],
        [ 0.4153,  0.3978,  0.3978,  ..., -1.2654, -1.1954, -1.2829]])
tensor([[-0.3725, -0.2500, -0.2150,  ..., -0.2850, -0.3025, -0.2325],
        [-0.3725, -0.2500, -0.1975,  ..., -0.2325, -0.2500, -0.2675],
        [-0.4601, -0.3375, -0.2325,  ..., -0.2500, -0.1800, -0.1975],
        ...,
        [ 0.2577,  0.2752,  0.3803,  ..., -1.0903, -1.1954, -1.0903],
        [ 0.2752,  0.3803,  0.4153,  ..., -1.1078, -1.1604, -1.1253],
        [ 0.3452,  0.4678,  0.4853,  ..., -1.1078, -1.1253, -1.0903]])
tensor([[-2.1179, -2.1179, -2.1179,  ..., -2.1179, -2.1179, -2.1179],
        [-2.1179, -2.1179, -2.1179,  ..., -2.1179, -2.1179, -2.1179],
        [-2.1179, -2.1179, -2.1179,  ..., -2.1179, -2.1179, -2.1179],
        ...,
        [-2.1179, -2.1179, -2.1179,  ..., -2.1179, -2.1179, -2.1179],
        [-2.1179, -2.1179, -2.1179,  ..., -2.1179, -2.1179, -2.1179],
        [-2.1179, -2.1179, -2.1179,  ..., -2.1179, -2.1179, -2.1179]])
tensor([[-2.0357, -2.0357, -2.0357,  ..., -2.0357, -2.0357, -2.0357],
        [-2.0357, -2.0357, -2.0357,  ..., -2.0357, -2.0357, -2.0357],
        [-2.0357, -2.0357, -2.0357,  ..., -2.0357, -2.0357, -2.0357],
        ...,
        [-2.0357, -2.0357, -2.0357,  ..., -2.0357, -2.0357, -2.0357],
        [-2.0357, -2.0357, -2.0357,  ..., -2.0357, -2.0357, -2.0357],
        [-2.0357, -2.0357, -2.0357,  ..., -2.0357, -2.0357, -2.0357]])
tensor([[-1.3354, -1.3179, -1.1078,  ...,  0.1176,  0.1877,  0.1527],
        [-1.3354, -1.2479, -1.0728,  ...,  0.1527,  0.2052,  0.1527],
        [-1.2654, -1.3004, -1.3004,  ...,  0.1877,  0.2227,  0.1877],
        ...,
        [-0.4076, -0.4951, -0.7402,  ...,  1.2731,  1.0805,  1.0280],
        [-0.3901, -0.3550, -0.3550,  ...,  1.0805,  1.4482,  1.5707],
        [-0.3725, -0.4426,  0.1176,  ...,  1.4132,  1.7633,  1.7108]])
tensor([[-1.1589, -1.3987, -1.5185,  ..., -1.0733, -0.3712, -1.0733],
        [-1.1760, -1.2445, -1.4843,  ..., -1.0562, -0.7308, -1.6727],
        [-1.3130, -1.3644, -1.3815,  ..., -0.6452, -0.9534, -1.5014],
        ...,
        [-0.3712, -0.1143, -0.5253,  ..., -0.3369, -0.4911, -0.6965],
        [-0.4397, -0.1828, -0.3369,  ..., -0.4226, -0.5596, -0.7650],
        [-0.7308, -0.4054, -0.2171,  ..., -0.5424, -0.6452, -0.7650]])
tensor([[-1.0553, -1.3004, -1.4230,  ..., -0.9678, -0.2500, -0.9678],
        [-1.0728, -1.1429, -1.3880,  ..., -0.9503, -0.6176, -1.5805],
        [-1.2129, -1.2654, -1.2829,  ..., -0.5301, -0.8452, -1.4055],
        ...,
        [-0.2500,  0.0126, -0.4076,  ..., -0.2150, -0.3725, -0.5826],
        [-0.3200, -0.0574, -0.2150,  ..., -0.3025, -0.4426, -0.6527],
        [-0.6176, -0.2850, -0.0924,  ..., -0.4251, -0.5301, -0.6527]])
tensor([[2.0259, 2.0259, 2.0259,  ..., 2.0259, 2.0259, 1.9909],
        [2.0259, 2.0259, 2.0259,  ..., 2.0434, 2.0434, 2.0259],
        [2.0259, 2.0259, 2.0259,  ..., 2.0434, 2.0434, 2.0259],
        ...,
        [1.4132, 1.4132, 1.3957,  ..., 1.6408, 1.6408, 1.6408],
        [1.3957, 1.3957, 1.3606,  ..., 1.6057, 1.6057, 1.6057],
        [1.3782, 1.3606, 1.3606,  ..., 1.6057, 1.6057, 1.6057]])
Traceback (most recent call last):
  File "dann.py", line 294, in <module>
    main(args)
  File "dann.py", line 145, in main
    lr_scheduler, epoch, args)
  File "dann.py", line 185, in train
    x_s, labels_s = next(train_source_iter)
  File "/src/Transfer-Learning-Library/common/utils/data.py", line 50, in __next__
    data = next(self.iter)
  File "/opt/conda/lib/python3.6/site-packages/torch/utils/data/dataloader.py", line 517, in __next__
    data = self._next_data()
  File "/opt/conda/lib/python3.6/site-packages/torch/utils/data/dataloader.py", line 1182, in _next_data
    idx, data = self._get_data()
  File "/opt/conda/lib/python3.6/site-packages/torch/utils/data/dataloader.py", line 1148, in _get_data
    success, data = self._try_get_data()
  File "/opt/conda/lib/python3.6/site-packages/torch/utils/data/dataloader.py", line 986, in _try_get_data
    data = self._data_queue.get(timeout=timeout)
  File "/opt/conda/lib/python3.6/multiprocessing/queues.py", line 104, in get
    if not self._poll(timeout):
  File "/opt/conda/lib/python3.6/multiprocessing/connection.py", line 257, in poll
    return self._poll(timeout)
  File "/opt/conda/lib/python3.6/multiprocessing/connection.py", line 414, in _poll
    r = wait([self], timeout)
  File "/opt/conda/lib/python3.6/multiprocessing/connection.py", line 911, in wait
    ready = selector.select(timeout)
  File "/opt/conda/lib/python3.6/selectors.py", line 376, in select
    fd_event_list = self._poll.poll(timeout)
KeyboardInterrupt
